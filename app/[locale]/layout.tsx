import type { Metadata } from "next";

import { Toaster } from "react-hot-toast";

import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";

import Script from "next/script";

import { AuthProvider } from "./authProvider";
import "../globals.css";
import Header from "./_layout_components/Header";
import Footer from "./_layout_components/Footer";
import { getServerSession } from "next-auth";
import { authOptions } from "../api/auth/[...nextauth]/route";
import AppWrapper from "./_layout_components/AppWrapper";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface Props {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}

export default async function LocaleLayout(props: Props) {
  const { children, params } = props;

  const session = await getServerSession(authOptions); // 服务端获取用户信息

  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body>
        <Script
          src="//at.alicdn.com/t/c/font_4910365_wqytpll6n9g.js"
          strategy="beforeInteractive"
        />
        <AuthProvider>
          <NextIntlClientProvider>
            <AppWrapper user={session?.user || null}>
              <Header />
              {children}
              <Toaster />
              <Footer />
            </AppWrapper>
          </NextIntlClientProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
